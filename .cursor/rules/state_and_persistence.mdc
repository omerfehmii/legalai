---
description: 
globs: 
alwaysApply: true
---
# State Management and Data Persistence

This rule details the strategies used for managing application state and persisting data locally.

## State Management (Riverpod)

*   **Library:** Riverpod is the primary state management solution.
*   **Key Providers:**
    *   `[AdvisorNotifier](mdc:lib/providers/advisor_provider.dart)`: Manages the state for the active chat session (`AdvisorScreen`). Extends `AsyncNotifier`.
    *   `[GeneratorNotifier](mdc:lib/providers/generator_provider.dart)`: Manages the state related to document generation. Extends `Notifier`.
    *   `[savedDocumentsProvider](mdc:lib/providers/saved_documents_provider.dart)`: Provides the list of saved documents asynchronously. Uses `FutureProvider`.
    *   Other providers likely exist for different features or UI states.

## Data Persistence (Hive)

*   **Library:** Hive is used for fast, local, key-value database storage.
*   **Initialization:** Hive is initialized, adapters are registered, and boxes are opened in `[main.dart](mdc:lib/main.dart)`.
*   **Boxes:**
    *   `chat_sessions`: Stores `[AdvisorSession](mdc:lib/models/advisor_session.dart)` objects. Accessed via `[AdvisorService](mdc:lib/services/advisor_service.dart)`. Uses `[AdvisorSessionAdapter](mdc:lib/models/advisor_session.dart)`.
    *   `saved_documents`: Stores `[SavedDocument](mdc:lib/models/saved_document.dart)` objects. Accessed via `[AdvisorService](mdc:lib/services/advisor_service.dart)`. Uses `[SavedDocumentAdapter](mdc:lib/models/saved_document.dart)`.
*   **Adapters:** TypeAdapters (`.g.dart` files generated by `build_runner`) are necessary for storing custom objects in Hive. Ensure adapters are generated and registered correctly in `[main.dart](mdc:lib/main.dart)`.
